"use strict";

var K = 273.15;
var R = 8.314;
var Tr = 25;    // Room temperature

var w2x = function(x) {
	/* Weight fraction to mole fraction in a binary Fe-C alloy */
	return (x/12)/(x/12 + (1-x)/56);
};

var x2w = function(x) {
	/* Mole fraction to weight fraction in a binary Fe-C alloy */
	return 12*x/(12*x + 56*(1-x));
};

var D = function(TC, xC) {
	/* Diffusion coefficient of austenite according to Agren, 1985 */
	var T = TC + K;
	var yC = xC/(1 - xC);

	var preExp = 4.53e5*(1 + yC*(1 - yC)*8339.9/T);
	var exp = -(1/T - 2.221e-4)*(17767 - 26436*yC);
	return preExp*Math.exp(exp);	// um^2/s
};

var getParams = function() {
	var TC = eval($("input[name=TC]").val());		// °C
	var c0 = eval($("input[name=c0]").val());		// wt.%
	var cs = eval($("input[name=cs]").val());		// wt.%
	var L = eval($("input[name=L]").val());		// mm
	var n = parseInt($("input[name=n]").val()) + 1;			// adimensional
	var t = eval($("input[name=t]").val());		// minutos
	var rmax = eval($("input[name=rmax]").val());	// adimensional
	c0 = w2x(c0/100);	// mole fraction
	cs = w2x(cs/100);	// mole fraction
	L = L*1000			// um
	t = t*60;			// segundos

	var Ds = D(TC, cs);		// um^2/s
	var dz = L/(n-1);			// um
	var dt = rmax*dz*dz/Ds;	// s
	var nit = Math.round(t/dt);
	var dtdz2 = dt/(dz*dz);
	$("input[name=nit]").val(nit);

	return {"TC": TC, "c0": c0, "cs": cs, "L": L, "n": n, "t": t, "rmax": rmax, "dz": dz, "dt": dt, "dtdz2": dtdz2, "nit": nit};
}

/****************** Events ****************/

getParams();
var data = [];
var labels = ['Profundidade', 'Teor de carbono', 'Carbono matriz'];

$("input").change(function(){
	var p = getParams();
	if (p.nit > 20000) {
		$("input[name=nit]").addClass("outrange");
	} else {
		$("input[name=nit]").removeClass("outrange");
	}
});

$("#compute").click(function() {
	var p = getParams();

	if (p.nit > 20000) {
		alert('Número de iterações muito grande. Escolha outros parâmetros de simulação.');
	} else {
		var r, g;
		var c = new Array(p.n);
		var c1 = new Array(p.n);
		c.fill(p.c0);
		c[0] = p.cs;

		for (var it = 0; it < p.nit; ++it) {
			// Método das diferenças finitas explícito
			for (var i = 1; i < c.length; ++i) {
				r = D(p.TC, c[i])*p.dtdz2;
				g = .25*(D(p.TC, c[i+1]) - D(p.TC, c[i-1]))*p.dtdz2;
				c1[i] = (r - g)*c[i-1] + (1 - 2*r)*c[i] + (r + g)*c[i+1];
			}
			c1[0] = p.cs;
			c1[c1.length-1] = c1[c1.length-2];	// Condição de Neumann (simetria) no interior do material
			c = c1.slice(0);
		}

		var z;
		data = [];
		for (var i = 0; i < c.length; ++i) {
			z = i*p.dz/1000;
			data.push([z, 100*x2w(c[i]), 100*x2w(p.c0)]);
		}

		var graph = new Dygraph($("#chart")[0], data,
			{
				valueRange: [0, x2w(p.cs)*120],
				labels: labels,
				xlabel: 'Profundidade (mm)',
				ylabel: 'Concentração de carbono (% peso)'
			});
	}
});

$("#exportcsv").click(function() {
	/*Export data as csv file*/
	var csvContent = "data:text/csv;charset=utf-8,";
	csvContent += labels.join(",") + "\n";
	csvContent = data.reduce(function(a, b) {
		return a + b.join(",") + "\n";
	}, csvContent);
	var encodeUri = encodeURI(csvContent);
	var link = $("#linkcsv");
	link.attr("href", encodeUri);
	link.attr("download", "data.csv");
	link[0].click();
});